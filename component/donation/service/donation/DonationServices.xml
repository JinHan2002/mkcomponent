<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <service verb="create" noun="Donation" type="inline">
        <in-parameters>
            <parameter name="firstName" required="true" />
            <parameter name="lastName" required="true" />
            <parameter name="emailAddress" required="true">
                <text-email message="Your email address is invalid"/>
            </parameter>
            <parameter name="contactNumber" required="true">
                <matches regexp="^\d\d[-\. \d]*\d\d$" message="Your phone number is invalid"/>
            </parameter>
            <parameter name="amount" required="true" />
            <parameter name="creditCard" required="true" />
            <parameter name="expireMonth" required="true" />
            <parameter name="expireYear" required="true" />
            <parameter name="cardSecurityCode" required="true" />
            <parameter name="address1" required="true"/>
            <parameter name="address2"/>
            <parameter name="city" required="true"/>
            <parameter name="stateProvinceGeoId" required="true"/>
            <parameter name="postalCode" required="true"/>
        </in-parameters>

        <out-parameters>
            <parameter name="partyId" />
            <parameter name="paymentMethodId" />
            <parameter name="paymentGatewayConfigId" />
        </out-parameters>

        <actions>
            <!-- Parsing form data-->
            <set field="expireDate" from="expireMonth + '/' + expireYear" />
            <service-call name="mantle.party.PartyServices.create#Person" in-map="[partyId:partyId] + context" out-map="context"/>
            <service-call name="mantle.party.ContactServices.store#PartyContactInfo" in-map="context" out-map="context"/>
            <set field="firstNameOnAccount" from="firstName"/>
            <set field="lastNameOnAccount" from="lastName"/>
            <set field="cardNumber" from="creditCard" />
            <service-call name="mantle.account.PaymentMethodServices.create#CreditCard" in-map="context" out-map="context"/>
            <set field="fromPartyId" from="partyId" />
            <set field="toPartyId" default-value="DefaultSettings"/>
            <service-call name="mantle.account.PaymentServices.create#Payment" in-map="context" out-map="context"/>
            <set field="paymentGatewayConfigId" value="AuthorizeDotNetCimDemo"/>
            <entity-find-one entity-name="mantle.account.payment.Payment" value-field="payment"/>
            <if condition="payment == null">
                <return message="Payment ${paymentId} not found"/></if>
            <set field="paymentMethod" from="payment.'mantle.account.method.PaymentMethod'"/>
            <if condition="paymentMethod?.paymentMethodTypeEnumId != 'PmtCreditCard'">
                <return error="true" message="Cannot authorize and capture payment ${paymentId}, not a Credit Card payment."/></if>
            <if condition="!cardSecurityCode">
                <set field="creditCard" from="payment.'mantle.account.method.CreditCard'"/>
                <set field="cardSecurityCode" from="creditCard?.cardSecurityCode"/>
            </if>
            <set field="visit" from="payment.'moqui.server.Visit'"/>
            <if condition="!paymentMethod.gatewayCimId">
                <service-call name="AuthorizeDotNet.CimServices.store#CustomerPaymentMethod" in-map="[paymentMethodId:paymentMethod.paymentMethodId, paymentId:paymentId, paymentGatewayConfigId:paymentGatewayConfigId]"/>
                <set field="paymentMethod" from="payment.'mantle.account.method.PaymentMethod'"/>
            </if>
            <set field="party" from="paymentMethod.'Owner#mantle.party.Party'"/>
            <entity-find-one entity-name="AuthorizeDotNet.PaymentGatewayAuthorizeNet" value-field="pgan"/>
            <if condition="pgan == null">
                <log level="error" message="No PaymentGatewayAuthorizeNet found with ID ${paymentGatewayConfigId}"/>
                <return/>
            </if>
            <!--calling PaymentGatewayAuthorizeNet, referenced from Moqui doc-->
            <script><![CDATA[requestString = """<?xml version="1.0" encoding="utf-8"?>
                        <createCustomerProfileTransactionRequest xmlns="AnetApi/xml/v1/schema/AnetApiSchema.xsd">
                            <merchantAuthentication><name>${pgan.login}</name><transactionKey>${pgan.tranKey}</transactionKey></merchantAuthentication>
                            <transaction><profileTransAuthCapture>
                                <amount>${toPlainString(payment.amount)}</amount>
                                <customerProfileId>${party.gatewayCimId}</customerProfileId>
                                <customerPaymentProfileId>${paymentMethod.gatewayCimId}</customerPaymentProfileId>
                                <order><invoiceNumber>${payment.orderId}</invoiceNumber></order>
                                ${cardSecurityCode ? ('<cardCode>' + cardSecurityCode + '</cardCode>') : ''}
                            </profileTransAuthCapture></transaction>
                            <extraOptions>x_currency_code=${payment.amountUomId}&amp;x_customer_ip=${visit?.clientIpAddress ?: ''}</extraOptions>
                        </createCustomerProfileTransactionRequest>
            """]]></script>
            <set field="paymentOperationEnumId" value="PgoAuthAndCapture"/>
            <set field="transactionUrl" from="pgan.transactionUrl"/>
            <!--Making AuthorizeDotNet CimPaymentServices service request call-->
            <service-call name="AuthorizeDotNet.CimPaymentServices.send#CimRequest" in-map="context" out-map="context"/>
        </actions>
    </service>
</services>